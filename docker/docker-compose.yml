version: "3.9"

services:
  reg_s:
    image: code/registry
    container_name: registry
    hostname: registry
    build:
      context: ..
      dockerfile: ./docker/Dockerfile_registration
    env_file: ../.env
    networks:
      - mapreduce
    volumes:
      - ./doc:/doc
    profiles:
      - app
      - benchmark

  master_s:
    image: code/master
    container_name: master
    hostname: master
    build:
      context: ..
      dockerfile: ./docker/Dockerfile_master
    env_file: ../.env
    networks:
      - mapreduce
    depends_on:
      - reg_s
      - worker_s
    volumes:
      - ./doc:/doc
    profiles:
      - app

  worker_s:
    image: code/worker
    build:
      context: ..
      dockerfile: ./docker/Dockerfile_worker
    env_file: ../.env
    networks:
      - mapreduce
    depends_on:
      - reg_s
    volumes:
      - ./doc:/doc
    profiles:
      - app
      - benchmark

  benchmark_s:
    image: code/benchmark
    container_name: benchmark
    hostname: benchmark
    build:
      context: ..
      dockerfile: Dockerfile_benchmark
    env_file: ../.env
    networks:
      - mapreduce
    depends_on:
      - reg_s
      - worker_s
    volumes:
      - ./doc:/doc
    profiles:
      - benchmark

 # prometheus:
 #  container_name: prometheus
 # hostname: prometheus
 #   image: prom/prometheus
 #   volumes:
 #     - ./config:/etc/prometheus
 #     - prometheus_data:/prometheus
 #   command:
 #     - '--config.file=/etc/prometheus/prometheus.yml'
 #     - '--web.console.libraries=/etc/prometheus/console_libraries'
 #     - '--web.console.templates=/etc/prometheus/consoles'
 #     - '--web.enable-lifecycle'
 #   ports:
 #     - "9090:9090"
 #   networks:
 #     - mapreduce
 #   depends_on:
 #     - master_s
 #     - worker_s
 #     - reg_s

 # grafana:
 #   container_name: grafana
 #   hostname: grafana
 #   image: grafana/grafana
 #   volumes:
 #     - ./config/grafana_datasources.yml:/etc/grafana/provisioning/datasources/all.yaml
 #     - ./config/grafana_config.ini:/etc/grafana/config.ini
 #     - grafana_data:/var/lib/grafana
 #   environment:
 #     - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
 #     - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
 #     - GF_USERS_ALLOW_SIGN_UP=false
 #   restart: unless-stopped
 #   depends_on:
 #     - prometheus
 #     - master_s
 #     - worker_s
 #     - reg_s
 #   ports:
 #     - "3000:3000"
 #   networks:
 #     - mapreduce
 #   labels:
 #     org.label-schema.group: "monitoring"

#volumes:
#  prometheus_data: {}
#  grafana_data: {}

networks:
  mapreduce:
    driver: bridge

